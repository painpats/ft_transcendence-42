# Generated by Django 4.2.16 on 2024-10-13 02:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='')),
                ('language', models.CharField(default='en', max_length=2)),
                ('is_online', models.BooleanField(default=True)),
                ('last_request', models.DateTimeField(blank=True, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_players', models.IntegerField(choices=[(4, '4 Players'), (8, '8 Players')], default=4)),
                ('is_full', models.BooleanField(default=False)),
                ('is_started', models.BooleanField(default=False)),
                ('is_finished', models.BooleanField(default=False)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hosted_tournaments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TournamentParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=255)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournaments_participated', to=settings.AUTH_USER_MODEL)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants_list', to='app.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='TournamentMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_finished', models.BooleanField(default=False)),
                ('player1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player1_matches', to='app.tournamentparticipant')),
                ('player2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player2_matches', to='app.tournamentparticipant')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='app.tournament')),
            ],
        ),
        migrations.AddField(
            model_name='tournament',
            name='participants',
            field=models.ManyToManyField(related_name='tournaments', through='app.TournamentParticipant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_alias', models.CharField(max_length=255)),
                ('opponent_alias', models.CharField(blank=True, max_length=255, null=True)),
                ('player_points', models.IntegerField()),
                ('opponent_points', models.IntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('game_type', models.CharField(choices=[('C', 'Classic'), ('B', 'Bot'), ('T', 'Tournament')], default='C', max_length=1)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_sessions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('P', 'Pending'), ('A', 'Accepted')], default='P', max_length=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('friend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend_of', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friends', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wins', models.IntegerField(default=0)),
                ('losses', models.IntegerField(default=0)),
                ('games_played', models.IntegerField(default=0)),
                ('total_points', models.IntegerField(default=0)),
                ('total_points_against', models.IntegerField(default=0)),
                ('wins_classic', models.IntegerField(default=0)),
                ('losses_classic', models.IntegerField(default=0)),
                ('games_played_classic', models.IntegerField(default=0)),
                ('total_points_classic', models.IntegerField(default=0)),
                ('total_points_against_classic', models.IntegerField(default=0)),
                ('wins_bot', models.IntegerField(default=0)),
                ('losses_bot', models.IntegerField(default=0)),
                ('games_played_bot', models.IntegerField(default=0)),
                ('total_points_bot', models.IntegerField(default=0)),
                ('total_points_against_bot', models.IntegerField(default=0)),
                ('wins_tournament', models.IntegerField(default=0)),
                ('losses_tournament', models.IntegerField(default=0)),
                ('games_played_tournament', models.IntegerField(default=0)),
                ('total_points_tournament', models.IntegerField(default=0)),
                ('total_points_against_tournament', models.IntegerField(default=0)),
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
